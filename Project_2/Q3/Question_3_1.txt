3.1.1 
      a) The branching factor for this would be 4
      b) The number of nodes the BFS has to expand is 4 + 4^2 + ... + 4^k
      c) Sum from i = 1 to k of (4)*i
      d) Even k: Sum from i = 1 to k/2 of 2*4*i, Odd k: Sum from i = 1 to (k+1)/2 of 2*4*i
      e) We are forced to do this as it would only cost 1 to explore the node and the outcome from exploring this node could have a huge negative cost therefore reducing the overall cost of the algorithm.
3.1.2
      a) A star graph would satisfy this. This type of graph is one node that is connected to every node with 1 edge and there are no other edges in the graph.
      b) A graph that starts the BFS at node s which is connected to k nodes and each one of these k nodes is connected to one node t which is the target node (we are trying to find a path from s to t).
      c) If we had a graph that was similar to a linked list. AKA: A->B->C->...
      d) The graph that is described in b would also show DFS working better than BFS.

3.2
- Formulation
	- Variables: The n rectangular pieces
	- Domain: Set of all squares in the W x H chessboard
	- Constraints: No 2 rectangles can overlap and all pieces need to be on the board.